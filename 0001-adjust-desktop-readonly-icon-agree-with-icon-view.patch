diff -Naur peony-3.0.4/libpeony-qt/controls/menu/directory-view-menu/directory-view-menu.cpp peony-3.0.4~/libpeony-qt/controls/menu/directory-view-menu/directory-view-menu.cpp
--- peony-3.0.4/libpeony-qt/controls/menu/directory-view-menu/directory-view-menu.cpp	2020-11-03 09:02:05.000000000 +0800
+++ peony-3.0.4~/libpeony-qt/controls/menu/directory-view-menu/directory-view-menu.cpp	2021-10-26 14:11:07.134058887 +0800
@@ -616,26 +616,22 @@
     if (m_selections.count() >1 && m_is_trash)
         return l;
 
-    if (!m_is_search) {
-        if (m_is_trash && m_selections.count() != 1){
-
-        }else{
-            l<<addAction(QIcon::fromTheme("preview-file"), tr("Properties"));
-            connect(l.last(), &QAction::triggered, [=]() {
-                //FIXME:
-                if (m_selections.isEmpty()) {
-                    QStringList uris;
-                    uris<<m_directory;
-                    PropertiesWindow *p = new PropertiesWindow(uris);
-                    p->setAttribute(Qt::WA_DeleteOnClose);
-                    p->show();
-                } else {
-                    PropertiesWindow *p = new PropertiesWindow(m_selections);
-                    p->setAttribute(Qt::WA_DeleteOnClose);
-                    p->show();
-                }
-            });
-        }
+    if (! m_is_search) {
+        l<<addAction(QIcon::fromTheme("preview-file"), tr("Properties"));
+        connect(l.last(), &QAction::triggered, [=]() {
+            //FIXME:
+            if (m_selections.isEmpty()) {
+                QStringList uris;
+                uris<<m_directory;
+                PropertiesWindow *p = new PropertiesWindow(uris);
+                p->setAttribute(Qt::WA_DeleteOnClose);
+                p->show();
+            } else {
+                PropertiesWindow *p = new PropertiesWindow(m_selections);
+                p->setAttribute(Qt::WA_DeleteOnClose);
+                p->show();
+            }
+        });
     } else if (m_selections.count() == 1) {
         l<<addAction(QIcon::fromTheme("preview-file"), tr("Properties"));
         connect(l.last(), &QAction::triggered, [=]() {
diff -Naur peony-3.0.4/peony-qt-desktop/desktop-icon-view-delegate.cpp peony-3.0.4~/peony-qt-desktop/desktop-icon-view-delegate.cpp
--- peony-3.0.4/peony-qt-desktop/desktop-icon-view-delegate.cpp	2020-11-03 09:02:05.000000000 +0800
+++ peony-3.0.4~/peony-qt-desktop/desktop-icon-view-delegate.cpp	2021-10-26 14:11:45.075056788 +0800
@@ -197,13 +197,16 @@
         topRight.setY(topRight.y() + 10);
         auto linkRect = QRect(topRight, lockerIconSize);
 
-        if (file->canRead() && !file->canWrite() && !file->canExecute()) {
-            QIcon symbolicLinkIcon = QIcon::fromTheme("emblem-readonly");
-            symbolicLinkIcon.paint(painter, linkRect, Qt::AlignCenter);
-        } else if (!file->canRead() && !file->canWrite() && !file->canExecute()) {
+        if (! file->canRead())
+        {
             QIcon symbolicLinkIcon = QIcon::fromTheme("emblem-unreadable");
             symbolicLinkIcon.paint(painter, linkRect, Qt::AlignCenter);
         }
+        else if(! file->canWrite() && ! file->canExecute())
+        {
+            QIcon symbolicLinkIcon = QIcon::fromTheme("emblem-readonly");
+            symbolicLinkIcon.paint(painter, linkRect, Qt::AlignCenter);
+        }
     }
 
     if (index.data(Qt::UserRole + 1).toBool()) {
